//
//  MapViewController.swift
//  ququququ
//
//  Created by Buratsakorn Petchdee on 17/3/2565 BE.
//  Copyright (c) 2565 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the VIP Swift Xcode Templates(https://github.com/Andrei-Popilian/VIP_Design_Xcode_Template)
//  so you can apply clean architecture to your iOS and MacOS projects,
//  see more http://clean-swift.com
//
//import GoogleMaps
import UIKit
import MapKit


protocol MapDisplayLogic where Self: UIViewController {
    func displayLocations(locations: [MapModel.Location])
}

class MapViewController: UIViewController {
    
    @IBOutlet weak var map: MKMapView!
    
    struct Pins{
        let location : String
        let long : CLLocationDegrees
        let lat : CLLocationDegrees
    }
    
    private var interactor: MapBusinessLogic!
    private var router: MapRouting!
    
    let initialLocation = CLLocation(latitude: 13.729476664536152, longitude: 100.53528567600118)
    

    
    override func viewDidLoad() {
        super.viewDidLoad()
        interactor = MapInteractor(viewController: self)
        router = MapRouter(viewController: self)
       // mapView.delegate = self
        map.delegate = self
        
        map.mapType = .standard
      
        let location = CLLocationCoordinate2D(latitude: 13.729476664536152,longitude: 100.53528567600118)
        
        let span = MKCoordinateSpan(latitudeDelta: 1, longitudeDelta: 1)
        let region = MKCoordinateRegion(center: location, span: span)
        map.setRegion(region, animated: true)
        
        interactor.fetchLocations()
    }
    
//    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
//           if segue.identifier == "QueueStoryboard" {
//               let userViewController = segue.destination as! MapViewController
//               // TODO: something
//           }
//       }
    
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
    }
    
    override func viewDidAppear(_ animated: Bool) {
        super.viewDidAppear(animated)
    }
    override func viewDidLayoutSubviews() {
        super.viewDidLayoutSubviews()
    }
    
    override func viewDidDisappear(_ animated: Bool) {
        super.viewDidDisappear(animated)
    }
    
    override func viewWillDisappear(_ animated: Bool) {
        super.viewWillDisappear(animated)
    }}


// MARK: - MapDisplayLogic
extension MapViewController: MapDisplayLogic {
    func displayLocations(locations: [MapModel.Location]) {
        var annotations: [MKPointAnnotation] = []
        locations.forEach { location in
            let annotation = MKPointAnnotation()
            let centerAnnotation = CLLocationCoordinate2D(latitude: Double(location.latitude) ?? 0, longitude: Double(location.longitude) ?? 0)
            annotation.coordinate = centerAnnotation
            annotation.title = location.location
            annotations.append(annotation)
        }
        map.addAnnotations(annotations)
    }
}

extension MapViewController: MKMapViewDelegate{

    func mapView(_ mapView: MKMapView, annotationView view: MKAnnotationView, calloutAccessoryControlTapped control: UIControl) {
         print("calloutAccessoryControlTapped")
      }
    
    func mapView(_ mapView: MKMapView, didSelect view: MKAnnotationView){
       // guard let annotation = view.annotation as? MapModel.Location else { return }
       
        let storyboard: UIStoryboard = UIStoryboard(name: "QueueStoryboard", bundle: nil)
        let book = storyboard.instantiateViewController(withIdentifier: "QueueViewController") as! QueueViewController
        book.selectedBranch = (view.annotation?.title ?? "") ?? ""
        navigationController?.pushViewController(book, animated: true)
        

    }
}
//extension MapViewController: MKMapViewDelegate {
//
//    func mapView(_ mapView: MKMapView, didSelect view: MKAnnotationView) {
//        performSegue(withIdentifier: "QueueStoryboard", sender: nil)
//    }
//}







