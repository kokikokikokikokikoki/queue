//
//  BookingPresenter.swift
//  ququququ
//
//  Created by Buratsakorn Petchdee on 1/3/2565 BE.
//  Copyright (c) 2565 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the VIP Swift Xcode Templates(https://github.com/Andrei-Popilian/VIP_Design_Xcode_Template)
//  so you can apply clean architecture to your iOS and MacOS projects,
//  see more http://clean-swift.com
//

import Foundation

protocol BookingPresentationLogic {
  func presentResponse(_ response: BookingModel.Response)
}

final class BookingPresenter {
  private weak var viewController: BookingDisplayLogic?
  
  init(viewController: BookingDisplayLogic?) {
    self.viewController = viewController
  }
}


// MARK: - BookingPresentationLogic
extension BookingPresenter: BookingPresentationLogic {
  
  func presentResponse(_ response: BookingModel.Response) {
    
    switch response {
      
    case .doSomething(let newItem, let isItem):
      presentDoSomething(newItem, isItem)
    }
  }
}


// MARK: - Private Zone
private extension BookingPresenter {
  
  func presentDoSomething(_ newItem: Int, _ isItem: Bool) {
      viewController?.displaySomething()
  }
}
