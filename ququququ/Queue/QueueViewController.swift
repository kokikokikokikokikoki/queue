//
//  QueueViewController.swift
//  ququququ
//
//  Created by Buratsakorn Petchdee on 2/3/2565 BE.
//  Copyright (c) 2565 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the VIP Swift Xcode Templates(https://github.com/Andrei-Popilian/VIP_Design_Xcode_Template)
//  so you can apply clean architecture to your iOS and MacOS projects,
//  see more http://clean-swift.com
//

import UIKit

protocol QueueDisplayLogic where Self: UIViewController {
    func dismissViewController()
    func displaySomething()
}

class QueueViewController: UIViewController {
    @IBOutlet weak var nameField: UITextField!
    @IBOutlet weak var branchField: UITextField!
    @IBOutlet weak var datePicker: UIDatePicker!
    
    @IBOutlet weak var descField: UITextField!
    @IBOutlet weak var timePicker: UIDatePicker!
    private var interactor: QueueBusinessLogic!
    private var router: QueueRouting!
    
    var selectedBranch: String = ""
    
    func clearBtn(){
        
        nameField.clearButtonMode = .always
        nameField.clearButtonMode = .whileEditing
    }
    //    func doneBtn(){
    //        let doneBtn = UIBarButtonItem(barButtonSystemItem: .done, target: self, action: #selector(doneBtnPressed))
    //        let toolbar = UIToolbar()
    //        toolbar.sizeToFit()
    //        branchField.inputAccessoryView = toolbar
    //        nameField.inputAccessoryView = toolbar
    //        toolbar.items = [doneBtn]
    //    }
    
    let branches = ["Bangbon Branch", "The Mall Bang Kapi Branch", "The Mall Bang Khae Branch", "Central Plaza Rama 2", "Central Pinklao Branch", "Central Plaza Bangna Branch", "Silom Complex Branch", "Bangrak Branch", "Central Ladphao Branch", "Bangkhen Branch", "Central Plaza Grand Rama 9 Branch", "Fashion Island Branch", "Central Eastville Branch", "Thanon Langsuan Branch"]
    var pickerViewBranch = UIPickerView()
    
    let datePick = UIDatePicker(frame: CGRect(x: 0, y: 0, width: UIScreen.main.bounds.width, height: 300))
    override func viewDidLoad() {
        super.viewDidLoad()
        interactor = QueueInteractor(viewController: self)
        router = QueueRouter(viewController: self)
        pickerViewBranch.delegate = self
        pickerViewBranch.dataSource = self
        branchField.inputView = pickerViewBranch
        
        datePicker.semanticContentAttribute = .forceRightToLeft
        datePicker.subviews.first?.semanticContentAttribute = .forceRightToLeft
        timePicker.semanticContentAttribute = .forceRightToLeft
        timePicker.subviews.first?.semanticContentAttribute = .forceRightToLeft
        clearBtn()
        checkMap()
        print("select branch", selectedBranch)
    }
    
    @IBAction func onClickBooking(_ sender: Any) {
        interactor.doPostRequest(date: datePicker.date, time: timePicker.date, branch: branchField.text ?? "", name: nameField.text ?? "", description: descField.text ?? "")
    }
    func checkMap(){
        if selectedBranch.isEmpty{
            branchField.text = branchField.text
            
        } else{
            branchField.text = selectedBranch
            
        }
    }
}

extension QueueViewController: UIPickerViewDelegate, UIPickerViewDataSource {
    func pickerView(_ pickerView: UIPickerView, numberOfRowsInComponent component: Int) -> Int {
        return branches.count
    }
    func pickerView(_ pickerView: UIPickerView, titleForRow row: Int, forComponent component: Int) -> String? {
        return branches[row]
    }
    func pickerView(_ pickerView: UIPickerView, didSelectRow row: Int, inComponent component: Int) {
        branchField.text = branches[row]
        
        //branchField.resignFirstResponder()
    }
    func numberOfComponents(in pickerView: UIPickerView) -> Int {
        return 1
    }
}




// MARK: - QueueDisplayLogic
extension QueueViewController: QueueDisplayLogic {
    
    func displaySomething() {
        
    }
    
    func dismissViewController() {
        DispatchQueue.main.async {
            self.navigationController?.popToRootViewController(animated: true)
        }
    }
}
