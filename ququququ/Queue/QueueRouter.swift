//
//  QueueRouter.swift
//  ququququ
//
//  Created by Buratsakorn Petchdee on 2/3/2565 BE.
//  Copyright (c) 2565 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the VIP Swift Xcode Templates(https://github.com/Andrei-Popilian/VIP_Design_Xcode_Template)
//  so you can apply clean architecture to your iOS and MacOS projects,
//  see more http://clean-swift.com
//

import UIKit

protocol QueueRouting {
  
  func routeTo(_ route: QueueModel.Route)
}

final class QueueRouter {
  
  private weak var viewController: UIViewController?
  
  init(viewController: UIViewController?) {
    self.viewController = viewController
  }
}


// MARK: - QueueRouting
extension QueueRouter: QueueRouting {
  
  func routeTo(_ route: QueueModel.Route) {
    DispatchQueue.main.async {
      switch route {
        
      case .dismissQueueScene:
        self.dismissQueueScene()
        
      case .xScene(let data):
        self.showXSceneBy(data)
      }
    }
  }
}


// MARK: - Private Zone
private extension QueueRouter {
  
  func dismissQueueScene() {
    viewController?.dismiss(animated: true)
  }
  
  func showXSceneBy(_ data: Int) {
    print("will show the next screen")
  }
}
